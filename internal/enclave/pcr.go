package enclave

import (
	"bytes"
	"crypto/sha512"
	"fmt"
)

var emptyPCR = make([]byte, sha512.Size384)

// PCR represents the enclave's platform configuration register (PCR) values.
type PCR map[uint][]byte

// FromDebugMode returns true if the given PCR map was generated by an enclave
// in debug mode.
func (p PCR) FromDebugMode() bool {
	// PCRs 0, 1, and 2 are set at compile time but will be unset if the enclave
	// is running in debug mode.
	return bytes.Equal(p[0], emptyPCR) &&
		bytes.Equal(p[1], emptyPCR) &&
		bytes.Equal(p[2], emptyPCR)
}

// String returns a human-readable representation of the PCR map.
func (p PCR) String() string {
	s := ""
	for key, val := range p {
		s += fmt.Sprintf("%d: %x\n", key, val)
	}
	return s
}

// Equal returns true if (and only if) the two given PCR maps are identical.
func (ours PCR) Equal(theirs PCR) bool {
	for i, ourValue := range ours {
		// PCR4 contains a hash over the parent's instance ID.  If horizontal
		// scaling is enabled, enclaves run on different parent instances, so
		// PCR4 will differ:
		// https://docs.aws.amazon.com/enclaves/latest/user/set-up-attestation.html
		if i == 4 {
			continue
		}
		theirValue, exists := theirs[i]
		if !exists {
			return false
		}
		if !bytes.Equal(ourValue, theirValue) {
			return false
		}
	}
	return true
}
